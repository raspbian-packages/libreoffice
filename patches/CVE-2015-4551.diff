diff --git a/include/unotools/securityoptions.hxx b/include/unotools/securityoptions.hxx
index 3bd8807..77e4720 100644
--- a/include/unotools/securityoptions.hxx
+++ b/include/unotools/securityoptions.hxx
@@ -186,6 +186,8 @@ class UNOTOOLS_DLLPUBLIC SAL_WARN_UNUSED SvtSecurityOptions : public utl::detail
         */
         bool isTrustedLocationUri(OUString const & uri) const;
 
+        bool isTrustedLocationUriForUpdatingLinks(OUString const & uri) const;
+
         ::com::sun::star::uno::Sequence< Certificate >  GetTrustedAuthors       (                                                                   ) const;
         void                                            SetTrustedAuthors       ( const ::com::sun::star::uno::Sequence< Certificate >& rAuthors    );
 
diff --git a/sc/source/filter/xml/xmlimprt.cxx b/sc/source/filter/xml/xmlimprt.cxx
index e1b73fe..c5f1ef5 100644
--- a/sc/source/filter/xml/xmlimprt.cxx
+++ b/sc/source/filter/xml/xmlimprt.cxx
@@ -2628,6 +2628,9 @@ void ScXMLImport::SetConfigurationSettings(const uno::Sequence<beans::PropertyVa
             OUString sCTName("TrackedChangesProtectionKey");
             OUString sVBName("VBACompatibilityMode");
             OUString sSCName("ScriptConfiguration");
+            css::uno::Sequence<css::beans::PropertyValue> aFilteredProps(
+                aConfigProps.getLength());
+            sal_Int32 nFilteredPropsLen = 0;
             for (sal_Int32 i = nCount - 1; i >= 0; --i)
             {
                 if (aConfigProps[i].Name == sCTName)
@@ -2662,11 +2665,16 @@ void ScXMLImport::SetConfigurationSettings(const uno::Sequence<beans::PropertyVa
                             xImportInfo->setPropertyValue( aConfigProps[i].Name, aConfigProps[i].Value );
                     }
                 }
+                if (aConfigProps[i].Name != "LinkUpdateMode")
+                {
+                    aFilteredProps[nFilteredPropsLen++] = aConfigProps[i];
+                }
             }
+            aFilteredProps.realloc(nFilteredPropsLen);
             uno::Reference <uno::XInterface> xInterface = xMultiServiceFactory->createInstance("com.sun.star.comp.SpreadsheetSettings");
             uno::Reference <beans::XPropertySet> xProperties(xInterface, uno::UNO_QUERY);
             if (xProperties.is())
-                SvXMLUnitConverter::convertPropertySet(xProperties, aConfigProps);
+                SvXMLUnitConverter::convertPropertySet(xProperties, aFilteredProps);
         }
     }
 }
diff --git a/sc/source/ui/docshell/docsh4.cxx b/sc/source/ui/docshell/docsh4.cxx
index dd9eaf8..9e4a27b 100644
--- a/sc/source/ui/docshell/docsh4.cxx
+++ b/sc/source/ui/docshell/docsh4.cxx
@@ -48,6 +48,7 @@ using namespace ::com::sun::star;
 #include <svl/PasswordHelper.hxx>
 #include <svl/documentlockfile.hxx>
 #include <svl/sharecontrolfile.hxx>
+#include <unotools/securityoptions.hxx>
 
 #include <comphelper/processfactory.hxx>
 #include "docuno.hxx"
@@ -423,12 +424,23 @@ void ScDocShell::Execute( SfxRequest& rReq )
 
                 if (nCanUpdate == com::sun::star::document::UpdateDocMode::NO_UPDATE)
                     nSet = LM_NEVER;
-                else if (nCanUpdate == com::sun::star::document::UpdateDocMode::QUIET_UPDATE &&
-                    nSet == LM_ON_DEMAND)
-                    nSet = LM_NEVER;
                 else if (nCanUpdate == com::sun::star::document::UpdateDocMode::FULL_UPDATE)
                     nSet = LM_ALWAYS;
 
+                if (nSet == LM_ALWAYS
+                    && !(SvtSecurityOptions()
+                         .isTrustedLocationUriForUpdatingLinks(
+                             GetMedium() == nullptr
+                             ? OUString() : GetMedium()->GetName())))
+                {
+                    nSet = LM_ON_DEMAND;
+                }
+                if (nCanUpdate == css::document::UpdateDocMode::QUIET_UPDATE
+                    && nSet == LM_ON_DEMAND)
+                {
+                    nSet = LM_NEVER;
+                }
+
                 if(nSet==LM_ON_DEMAND)
                 {
                     QueryBox aBox( GetActiveDialogParent(), WinBits(WB_YES_NO | WB_DEF_YES),
diff --git a/sw/source/core/doc/docnew.cxx b/sw/source/core/doc/docnew.cxx
index d42dd9f..6f0e94e 100644
--- a/sw/source/core/doc/docnew.cxx
+++ b/sw/source/core/doc/docnew.cxx
@@ -103,6 +103,8 @@
 #include <fmtmeta.hxx>
 #include <boost/foreach.hpp>
 
+#include <unotools/securityoptions.hxx>
+
 using namespace ::com::sun::star;
 using namespace ::com::sun::star::document;
 
@@ -889,6 +889,15 @@ void SwDoc::UpdateLinks( bool bUI )
                 case document::UpdateDocMode::QUIET_UPDATE:bAskUpdate = false; break;
                 case document::UpdateDocMode::FULL_UPDATE: bAskUpdate = true; break;
             }
+            if (nLinkMode == AUTOMATIC && !bAskUpdate)
+            {
+                SfxMedium * medium = GetDocShell()->GetMedium();
+                if (!SvtSecurityOptions().isTrustedLocationUriForUpdatingLinks(
+                        medium == nullptr ? OUString() : medium->GetName()))
+                {
+                    bAskUpdate = true;
+                }
+            }
             if( bUpdate && (bUI || !bAskUpdate) )
             {
                 SfxMedium* pMedium = GetDocShell()->GetMedium();
diff --git a/sw/source/filter/xml/xmlimp.cxx b/sw/source/filter/xml/xmlimp.cxx
index 3af249c..53301e7 100644
--- a/sw/source/filter/xml/xmlimp.cxx
+++ b/sw/source/filter/xml/xmlimp.cxx
@@ -1072,45 +1072,45 @@ void SwXMLImport::SetConfigurationSettings(const Sequence < PropertyValue > & aC
     if( !xInfo.is() )
         return;
 
-    boost::unordered_set< OUString, OUStringHash > aSet;
-    aSet.insert("ForbiddenCharacters");
-    aSet.insert("IsKernAsianPunctuation");
-    aSet.insert("CharacterCompressionType");
-    aSet.insert("LinkUpdateMode");
-    aSet.insert("FieldAutoUpdate");
-    aSet.insert("ChartAutoUpdate");
-    aSet.insert("AddParaTableSpacing");
-    aSet.insert("AddParaTableSpacingAtStart");
-    aSet.insert("PrintAnnotationMode");
-    aSet.insert("PrintBlackFonts");
-    aSet.insert("PrintControls");
-    aSet.insert("PrintDrawings");
-    aSet.insert("PrintGraphics");
-    aSet.insert("PrintLeftPages");
-    aSet.insert("PrintPageBackground");
-    aSet.insert("PrintProspect");
-    aSet.insert("PrintReversed");
-    aSet.insert("PrintRightPages");
-    aSet.insert("PrintFaxName");
-    aSet.insert("PrintPaperFromSetup");
-    aSet.insert("PrintTables");
-    aSet.insert("PrintSingleJobs");
-    aSet.insert("UpdateFromTemplate");
-    aSet.insert("PrinterIndependentLayout");
-    aSet.insert("PrintEmptyPages");
-    aSet.insert("SmallCapsPercentage66");
-    aSet.insert("TabOverflow");
-    aSet.insert("UnbreakableNumberings");
-    aSet.insert("ClippedPictures");
-    aSet.insert("BackgroundParaOverDrawings");
-    aSet.insert("TabOverMargin");
+    boost::unordered_set< OUString, OUStringHash > aExcludeAlways;
+    aExcludeAlways.insert("LinkUpdateMode");
+    boost::unordered_set< OUString, OUStringHash > aExcludeWhenNotLoadingUserSettings;
+    aExcludeWhenNotLoadingUserSettings.insert("ForbiddenCharacters");
+    aExcludeWhenNotLoadingUserSettings.insert("IsKernAsianPunctuation");
+    aExcludeWhenNotLoadingUserSettings.insert("CharacterCompressionType");
+    aExcludeWhenNotLoadingUserSettings.insert("FieldAutoUpdate");
+    aExcludeWhenNotLoadingUserSettings.insert("ChartAutoUpdate");
+    aExcludeWhenNotLoadingUserSettings.insert("AddParaTableSpacing");
+    aExcludeWhenNotLoadingUserSettings.insert("AddParaTableSpacingAtStart");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintAnnotationMode");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintBlackFonts");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintControls");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintDrawings");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintGraphics");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintLeftPages");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintPageBackground");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintProspect");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintReversed");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintRightPages");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintFaxName");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintPaperFromSetup");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintTables");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintSingleJobs");
+    aExcludeWhenNotLoadingUserSettings.insert("UpdateFromTemplate");
+    aExcludeWhenNotLoadingUserSettings.insert("PrinterIndependentLayout");
+    aExcludeWhenNotLoadingUserSettings.insert("PrintEmptyPages");
+    aExcludeWhenNotLoadingUserSettings.insert("SmallCapsPercentage66");
+    aExcludeWhenNotLoadingUserSettings.insert("TabOverflow");
+    aExcludeWhenNotLoadingUserSettings.insert("UnbreakableNumberings");
+    aExcludeWhenNotLoadingUserSettings.insert("ClippedPictures");
+    aExcludeWhenNotLoadingUserSettings.insert("BackgroundParaOverDrawings");
+    aExcludeWhenNotLoadingUserSettings.insert("TabOverMargin");
 
     sal_Int32 nCount = aConfigProps.getLength();
     const PropertyValue* pValues = aConfigProps.getConstArray();
 
     SvtSaveOptions aSaveOpt;
-    bool bIsUserSetting = aSaveOpt.IsLoadUserSettings(),
-         bSet = bIsUserSetting;
+    bool bIsUserSetting = aSaveOpt.IsLoadUserSettings();
 
     // for some properties we don't want to use the application
     // default if they're missing. So we watch for them in the loop
@@ -1145,10 +1145,12 @@ void SwXMLImport::SetConfigurationSettings(const Sequence < PropertyValue > & aC
 
     while( nCount-- )
     {
-        if( !bIsUserSetting )
+        bool bSet = aExcludeAlways.find(pValues->Name) == aExcludeAlways.end();
+        if( bSet && !bIsUserSetting
+            && (aExcludeWhenNotLoadingUserSettings.find(pValues->Name)
+                != aExcludeWhenNotLoadingUserSettings.end()) )
         {
-            // test over the hash value if the entry is in the table.
-            bSet = aSet.find(pValues->Name) == aSet.end();
+            bSet = false;
         }
 
         if( bSet )
diff --git a/unotools/source/config/securityoptions.cxx b/unotools/source/config/securityoptions.cxx
index 7906ed7..86055c5 100644
--- a/unotools/source/config/securityoptions.cxx
+++ b/unotools/source/config/securityoptions.cxx
@@ -1051,6 +1051,14 @@ bool SvtSecurityOptions::isTrustedLocationUri(OUString const & uri) const {
     return false;
 }
 
+bool SvtSecurityOptions::isTrustedLocationUriForUpdatingLinks(
+    OUString const & uri) const
+{
+    return GetMacroSecurityLevel() == 0 || uri.isEmpty()
+        || uri.startsWithIgnoreAsciiCase("private:")
+        || isTrustedLocationUri(uri);
+}
+
 sal_Int32 SvtSecurityOptions::GetMacroSecurityLevel() const
 {
     MutexGuard aGuard( GetInitMutex() );
