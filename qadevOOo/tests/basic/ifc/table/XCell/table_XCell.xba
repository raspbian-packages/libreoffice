<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="table_XCell" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.table.XCell
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim aFormula As String
    Dim aValue As Integer
    Dim aType As Variant

    Test.StartMethod("setFormula()")
    bOK = true
    Out.Log("setFormula(""=2+2"")")
    oObj.setFormula("=2+2")
    Test.MethodTested("setFormula()", bOK)

    Test.StartMethod("getFormula()")
    bOK = true
    aFormula = oObj.getFormula()
    Out.Log("getFormula() returned '" &amp; aFormula &amp; "'")
    bOK = bOK AND inStr(1, aFormula, "2+2")
    Test.MethodTested("getFormula()", bOK)

    Test.StartMethod("getValue()")
    bOK = true
    aValue = oObj.getValue()
    bOK = bOK AND aValue = 4
    Test.MethodTested("getValue()", bOK)

    Test.StartMethod("setValue()")
    bOK = true
    oObj.setValue(10)
    bOK = bOK AND oObj.getValue = 10
    Test.MethodTested("setValue()", bOK)

    Test.StartMethod("getType()")
    bOK = true
    aType = oObj.getType()
    bOK = bOK AND (aType = com.sun.star.table.CellContentType.EMPTY OR _
                   aType = com.sun.star.table.CellContentType.VALUE OR _
                   aType = com.sun.star.table.CellContentType.TEXT  OR _
                   aType = com.sun.star.table.CellContentType.FORMULA)
    Test.MethodTested("getType()", bOK)

    Test.StartMethod("getError()")
    bOK = true
    bOK = bOK AND (oObj.getError() = 0)
    oObj.setFormula("=sqrt(-2)")
    bOK = bOK AND (oObj.getError() &lt;&gt; 0)
    Test.MethodTested("getError()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
