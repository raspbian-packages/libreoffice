<?xml version="1.0" encoding="UTF-8"?>
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="task_XJob" script:language="StarBasic">

'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'	Global vXJobArgs(0 to n) as Variant
'   Example:
'	Dim vXJobArg0(0 to 0) as new com.sun.star.beans.NamedValue
'	Dim vXJobArg1(0 to 0) as new com.sun.star.beans.NamedValue
'	vXJobArgs0(0).Name = "MyProperty": vXJobArg0(0).Vaue = "MyValue"
'	vXJobArgs1(0).Name = "MyProperty": vXJobArg0(0).Vaue = "My2ndValue"
'	vXJobArgs(0) = vXJobArg0()
'	vXJobArgs(1) = vXJobArg1()


'*************************************************************************


' Be sure that all variables are dimensioned:
option explicit




Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.task.XJob
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim bRun as Boolean
	Dim n as Integer
    
    out.dbg("Start tests of com.sun.star.task.XJob #########") 
    ReCreateObj()
	
    Test.StartMethod("execute()")
	
	bOK = TRUE
	for n = 0 to uBound(vXJobArgs())
        bRun = FALSE
		out.dbg("running vXJobArgs(" + n + ")")
		bRun = oObj.execute(vXJobArgs(n))
        bOK = bOK AND bRun
        out.dbg("Result: " + bRun) 
	next n
    Test.MethodTested("execute()", bOK)
	
	
Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
