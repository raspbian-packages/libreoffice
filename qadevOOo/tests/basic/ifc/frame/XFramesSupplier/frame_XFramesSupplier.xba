<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="frame_XFramesSupplier" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit




Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.frame.XFramesSupplier
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Test.StartMethod("getFrames()")
    bOK = true
    Dim frames As Object
    frames = oObj.getFrames()
    Dim cnt As Integer
    if (Not isNull(frames) ) then
        cnt = frames.getCount()
        bOK = cnt &lt;&gt; 0
        Out.log("There are " + cnt + " frames.")
    else
        Out.log("getFrames() returned null !!!")
        bOK = false
    end if
    Dim i As Integer
    for i = 0 to (cnt - 1)
        Dim fr As Object
        fr = frames.getByIndex(i)
        if (isNull(fr)) then
            Out.log("Frame(" + i + ") == null")
            bOK = false
        end if
    next i
    Test.MethodTested("getFrames()", bOK)

    Test.StartMethod("getActiveFrame()")
    bOK = true
    Dim active As Object
    active = oObj.getActiveFrame()
    active.setName("ActiveFrame")
    Dim hasActiveFrame As Boolean
    Dim activeIndex As Integer
    if (isNull(active)) then
        bOK = false
        Out.log("getActiveFrame() returned null")
    else
        hasActiveFrame = false
        for i = 0 to (cnt - 1)
            fr = frames.getByIndex(i)
            if (fr.getName() = "ActiveFrame") then
                hasActiveFrame = true
                activeIndex = i
            end if
        next i
        if (Not hasActiveFrame) then
            Out.log("getActiveFrame() isn't contained in getFrames() collection")
            bOK = false
        end if
    end if
    Test.MethodTested("getActiveFrame()", bOK)

    Test.StartMethod("setActiveFrame()")
    bOK = true
    Dim sFrame As Object
    if (cnt &gt; 1) then
        if (activeIndex &lt;&gt; 0) then
            sFrame = frames.getByIndex(0)
        else
            sFrame = frame.getByIndex(1)
        end if
    else
        sFrame = active
    end if
    sFrame.setName("Frame for set")
    oObj.setActiveFrame(sFrame)
    Dim gFrame As Object
    gFrame = oObj.getActiveFrame()
    if (gFrame.getName() &lt;&gt; "Frame for set") then
        bOK = false
        Out.log("Active frame set is not equal frame get: FAILED")
    end if
    Test.MethodTested("setActiveFrame()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
