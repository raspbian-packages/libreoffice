<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="util_XModeSelector" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.util.XModeSelector
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim i As Integer
    Dim modes As Variant
    Dim oldMode As String, newMode As String, resMode As String

    Test.StartMethod("getSupportedModes()")
    bOK = true
    modes = oObj.getSupportedModes()
    for i = lbound(modes()) to ubound(modes())
        out.Log("  " + modes(i))
    next i
    bOK = bOK AND ubound(modes()) &gt; 0
    Test.MethodTested("getSupportedModes()", bOK)

    Test.StartMethod("supportsMode()")
    bOK = true
    bOK = bOK AND oObj.supportsMode(modes(0))
    Test.MethodTested("supportsMode()", bOK)

    Test.StartMethod("getMode()")
    Test.StartMethod("setMode()")
    bOK = true
    oldMode = oObj.getMode()
    if oldMode = modes(0) then newMode = modes(1) else newMode = modes(0)
    oObj.setMode(newMode)
    resMode = oObj.getMode()
    bOK = bOK AND (newMode = resMode)
    Test.MethodTested("getMode()", bOK)
    Test.MethodTested("setMode()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
