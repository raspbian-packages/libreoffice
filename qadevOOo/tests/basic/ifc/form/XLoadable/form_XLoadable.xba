<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="form_XLoadable" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.form.XLoadable
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim bLoaded As Boolean
    Dim list As Object

    list = createUnoListener("L_", "com.sun.star.form.XLoadListener")
    initListener()

    Test.StartMethod("isLoaded()")
    bOK = true
    bLoaded = oObj.isLoaded()
    if bLoaded then  oObj.unload()
    bLoaded = oObj.isLoaded()
    bOK = bOK AND NOT bLoaded
    Test.MethodTested("isLoaded()", bOK)

    Test.StartMethod("addLoadListener()")
    oObj.addLoadListener(list)

    Test.StartMethod("load()")
    bOK = true
    oObj.load()
    bOK = bOK AND oObj.isLoaded() 
    bOK = bOK AND loaded
    Test.MethodTested("load()", bOK)

    Test.StartMethod("reload()")
    bOK = true
    oObj.reload()
    bOK = bOK AND oObj.isLoaded()
    bOK = bOK AND reloaded
    Test.MethodTested("reload()", bOK)

    Test.StartMethod("unload()")
    bOK = true
    oObj.unload()
    bOK = bOK AND NOT oObj.isLoaded()
    bOK = bOK AND unloaded
    Test.MethodTested("unload()", bOK)

    bOK = loaded AND reloaded AND reloading AND unloaded AND unloading
    Test.MethodTested("addLoadListener()", bOK)

    Test.StartMethod("removeLoadListener()")
    bOK = true
    oObj.removeLoadListener(list)
    initListener()
    oObj.load()
    bOK = bOK AND NOT loaded
    Test.MethodTested("removeLoadListener()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub

Sub initListener()
    loaded = false
    reloaded = false
    reloading = false
    unloaded = false
    unloading = false
End Sub

Dim loaded As Boolean
Dim reloaded As Boolean
Dim reloading As Boolean
Dim unloaded As Boolean
Dim unloading As Boolean

Sub L_loaded()
   Out.Log("Listener: loaded")
   loaded = true
End Sub
Sub L_reloaded()
   Out.Log("Listener: reloaded")
   reloaded = true
End Sub
Sub L_reloading()
   Out.Log("Listener: reloading")
   reloading = true
End Sub
Sub L_unloaded()
   Out.Log("Listener: unloaded")
   unloaded = true
End Sub
Sub L_unloading()
   Out.Log("Listener: unloading")
   unloading = true
End Sub
</script:module>
