<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="form_XFormController" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit

'*************************************************************************
' This Interface/Service test depends on the following GLOBAL variables,
' which must be specified in the object creation:

'     - Global otherWin As Object

'*************************************************************************






Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.form.XFormController
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim cntrl As Object
    Dim list1 As Object, list2 As Object

    Test.StartMethod("getCurrentControl()")
    bOK = true
    cntrl = oObj.getCurrentControl()
    bOK = bOK AND NOT isNull(cntrl)
    Test.MethodTested("getCurrentControl()", bOK)

    Test.StartMethod("addActivateListener()")
    bOK = true
    list1 = createUnoListener("L1_", "com.sun.star.form.XFormControllerListener")
    list2 = createUnoListener("L2_", "com.sun.star.form.XFormControllerListener")
    oObj.addActivateListener(list1)
    oObj.addActivateListener(list2)

    Test.StartMethod("removeActivateListener()")
    oObj.removeActivateListener(list1)

    if NOT hasUnoInterfaces(cntrl, "com.sun.star.awt.XWindow") then
        Out.Log("The oObj.getCurrentControl() return object doesn't support")
        Out.Log("com.sun.star.awt.XWindow interface required for testing !!!")
        Out.Log("Interface test must be redesigned thus !!!")
    else
        cntrl.setFocus()
        wait(500)
        otherWin.setFocus()
        wait(500)
    end if

    Test.MethodTested("addActivateListener()", L2called)
    Test.MethodTested("removeActivateListener()", _
        L2called AND NOT L1called)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub

Dim L1called As Boolean
Dim L2called As Boolean

Sub L1_formActivated(ev As Object)
    L1called = true
    Out.Log("L1 activated Called !!!!!!!!!")
end Sub

Sub L1_formDeactivated(ev As Object)
    L1called = true
    Out.Log("L1 deactivated Called !!!!!!!!!")
end Sub

Sub L2_formActivated()
    L2called = true
    Out.Log("L2 activated Called !!!!!!!!!")
end Sub

Sub L2_formDeactivated()
    L2called = true
    Out.Log("L2 deactivated Called !!!!!!!!!")
end Sub
</script:module>
