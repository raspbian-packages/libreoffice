<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XLabelRanges" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XLabelRanges
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim count As Integer
    Dim RangeAddress1 As New com.sun.star.table.CellRangeAddress
    Dim RangeAddress2 As New com.sun.star.table.CellRangeAddress

    Test.StartMethod("addNew()")
    bOK = true

    count = oObj.count
    RangeAddress1.Sheet = 0
    RangeAddress1.StartColumn = 2
    RangeAddress1.StartRow = 3
    RangeAddress1.EndColumn = 4
    RangeAddress1.EndRow = 5

    RangeAddress2.Sheet = 0
    RangeAddress2.StartColumn = 6
    RangeAddress2.StartRow = 7
    RangeAddress2.EndColumn = 8
    RangeAddress2.EndRow = 9
    oObj.AddNew(RangeAddress1, RangeAddress2)

    bOK = bOK AND count = oObj.count - 1
    Test.MethodTested("addNew()", bOK)

    Test.StartMethod("removeByIndex()")
    bOK = true

    count = oObj.count
    oObj.removeByIndex(count - 1)

    bOK = bOK AND (count = oObj.count + 1)
    Test.MethodTested("removeByIndex()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
