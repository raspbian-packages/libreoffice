<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XSheetCellRanges" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XSheetCellRanges
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oCells, oRanges As Variant
    Dim cRanges As String

    Test.StartMethod("getCells()")
    bOK = true
    oCells = oObj.getCells()
    bOK = bOK AND hasUnoInterfaces(oCells, "com.sun.star.container.XEnumerationAccess")
    Test.MethodTested("getCells()", bOK)

    Test.StartMethod("getRangeAddressesAsString()")
    bOK = true
    cRanges = oObj.getRangeAddressesAsString()
    Out.Log("Returned ranges are : '" &amp; cRanges &amp; "'")
    bOK = bOK AND inStr(1, cRanges, "Sheet")
    Test.MethodTested("getRangeAddressesAsString()", bOK)

    Test.StartMethod("getRangeAddresses()")
    bOK = true
    oRanges = oObj.getRangeAddresses()
    bOK = bOK AND (oRanges(ubound(oRanges)).StartColumn &lt;&gt; 0 OR _
                   oRanges(ubound(oRanges)).StartRow &lt;&gt; 0 OR _
                   oRanges(ubound(oRanges)).EndRow &lt;&gt; 0 OR _
                   oRanges(ubound(oRanges)).EndColumn &lt;&gt; 0 OR _
                   oRanges(ubound(oRanges)).Sheet &lt;&gt; 0)
    Test.MethodTested("getRangeAddresses()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
