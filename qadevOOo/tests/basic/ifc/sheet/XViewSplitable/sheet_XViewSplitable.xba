<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sheet_XViewSplitable" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit

Dim XSplitPos As Long
Dim YSplitPos As Long


Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.sheet.XViewSplitable
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Test.StartMethod("splitAtPosition()")
    bOK = true
    ' Only one of XViewSplitable::getIsWindowSplit() and
    '             XViewFreezable::hasFrozenPanes() can be true

    oObj.freezeAtPosition(10, 10)
    bOK = bOK AND oObj.hasFrozenPanes()
    SplitAt(100, 200)
    bOK = bOK AND NOT oObj.hasFrozenPanes()
    Test.MethodTested("splitAtPosition()", bOK)

    Test.StartMethod("getIsWindowSplit()")
    bOK = true
    SplitAt(0, 0)
    bOK = bOK AND NOT oObj.getIsWindowSplit()
    SplitAt(50, 50)
    bOK = bOK AND oObj.getIsWindowSplit()

    Test.MethodTested("getIsWindowSplit()", bOK)

    Test.StartMethod("getSplitHorizontal()")
    bOK = true
    SplitAt(0, 0)
    bOK = bOK AND oObj.getSplitHorizontal() = XSplitPos
    SplitAt(0, 100)
    bOK = bOK AND oObj.getSplitHorizontal() = XSplitPos
    SplitAt(100, 0)
    bOK = bOK AND oObj.getSplitHorizontal() = XSplitPos
    SplitAt(100, 100)
    bOK = bOK AND oObj.getSplitHorizontal() = XSplitPos
    Test.MethodTested("getSplitHorizontal()", bOK)

    Test.StartMethod("getSplitVertical()")
    bOK = true
    SplitAt(0, 0)
    bOK = bOK AND oObj.getSplitVertical() = YSplitPos
    SplitAt(100, 0)
    bOK = bOK AND oObj.getSplitVertical() = YSplitPos
    SplitAt(100, 100)
    bOK = bOK AND oObj.getSplitVertical() = YSplitPos
    SplitAt(0, 100)
    bOK = bOK AND oObj.getSplitVertical() = YSplitPos
    Test.MethodTested("getSplitVertical()", bOK)

    Test.StartMethod("getSplitColumn()")
    bOK = true
    SplitAt(0, 0)
    bOK = bOK AND oObj.getSplitColumn() = 0
    SplitAt(0, 100)
    bOK = bOK AND oObj.getSplitColumn() = 0
    SplitAt(100, 100)
    bOK = bOK AND oObj.getSplitColumn() &lt;&gt; 0
    SplitAt(100, 0)
    bOK = bOK AND oObj.getSplitColumn() &lt;&gt; 0
    Test.MethodTested("getSplitColumn()", bOK)

    Test.StartMethod("getSplitRow()")
    bOK = true
    SplitAt(0, 0)
    bOK = bOK AND oObj.getSplitRow() = 0
    SplitAt(100, 0)
    bOK = bOK AND oObj.getSplitRow() = 0
    SplitAt(100, 100)
    bOK = bOK AND oObj.getSplitRow() &lt;&gt; 0
    SplitAt(0, 100)
    bOK = bOK AND oObj.getSplitRow() &lt;&gt; 0
    Test.MethodTested("getSplitRow()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub

Sub SplitAt(x As Long, y As Long)
    Out.Log("Spliting At position (" &amp; x &amp; ", " &amp; y &amp; ")")
    oObj.SplitAtPosition(x, y)
    XSplitPos = x
    YSplitPos = y
End Sub
</script:module>
