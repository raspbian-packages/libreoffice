<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XTextTableCursor" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************





Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XTextTableCursor
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Test.StartMethod("gotoStart()")
    bOK = true
    oObj.gotoStart(false)
    bOK = bOK AND Expected("A1")
    Test.MethodTested("gotoStart()", bOK)

    Test.StartMethod("getRangeName()")
    bOK = true
    cName = oObj.getRangeName()
    bOK = bOK AND NOT isNULL(cName)
    Test.MethodTested("getRangeName()", bOK)

    Test.StartMethod("gotoCellByName()")
    bOK = true
    bOK = bOK AND oObj.gotoCellByName("B2", true)
    bOK = bOK AND Expected("A1:B2")
    Test.MethodTested("gotoCellByName()", bOK)

    Test.StartMethod("goLeft()")
    bOK = true
    bOK = bOK AND oObj.goLeft(1, false)
    bOK = bOK AND Expected("A2")
    Test.MethodTested("goLeft()", bOK)

    Test.StartMethod("goRight()")
    bOK = true
    bOK = bOK AND oObj.goRight(3, true)
    bOK = bOK AND Expected("A2:D2")
    Test.MethodTested("goRight()", bOK)

    Test.StartMethod("goUp()")
    bOK = true
    bOK = bOK AND oObj.goUp(1, true)
    bOK = bOK AND Expected("A2:D1")
    Test.MethodTested("goUp()", bOK)

    Test.StartMethod("goDown()")
    bOK = true
    bOK = bOK AND oObj.goDown(3, false)
    bOK = bOK AND Expected("D4")
    Test.MethodTested("goDown()", bOK)

    Test.StartMethod("gotoEnd()")
    bOK = true
    oObj.gotoEnd(true)
    bOK = bOK AND Expected("D4:E5")
    Test.MethodTested("gotoEnd()", bOK)

    Test.StartMethod("mergeRange()")
    bOK = true
    oObj.gotoStart(false)
    oObj.gotoEnd(true)
    bOK = bOK AND oObj.mergeRange()
    bOK = bOK AND Expected("A1")
    Test.MethodTested("mergeRange()", bOK)

    Test.StartMethod("splitRange()")
    bOK = true
    bOK = bOK AND oObj.splitRange(3, true)
    oObj.gotoEnd(true)
    bOK = bOK AND Expected("A1.1.1:A1.1.4")
	oObj.gotoStart(false)
    bOK = bOK AND oObj.splitRange(2, false)
    oObj.goRight(2, true)
    bOK = bOK AND Expected("A1.1.1:A1.3.1")
    Test.MethodTested("splitRange()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
Function Expected(cName As String) As Boolean
	Dim bOK As Boolean
	Dim cRangeName As String
	Dim cAltName As String
	Dim dPos As Integer

	cRangeName = oObj.getRangeName()

	dPos = inStr(1, cName, ":")
	if (dPos &gt; 0) then
		cAltName = Mid(cName, dPos + 1) &amp; ":" &amp; Left(cName, dPos - 1)
		bOK = (cRangeName = cName) OR (cAltName = cRangeName)
	else
		bOK = cRangeName = cName
	end if

	if (NOT bOK) then
		Out.Log("Expected RangeName is '" &amp; cName &amp; "' and actual is '" &amp; cRangeName &amp; "'")
	end if

	Expected() = bOK
End Function
</script:module>
