<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="text_XTextRangeCompare" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit



Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.text.XTextRangeCompare
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Dim oCursor1 As Object
    Dim oCursor2 As Object
    Dim nResult As Integer
    Dim bEnd As Boolean
    Dim bStart As Boolean
    Dim cIfcShortName As String

    cIfcShortName = "XTextRangeCompare"

    nResult = 10

    Test.StartMethod("compareRegionEnds()")
    Test.StartMethod("compareRegionStarts()")

    oCursor1 = oObj.createTextCursor()
    oCursor2 = oObj.createTextCursor()

    nResult = oObj.compareRegionEnds(oCursor1, oCursor2)
    bEnd = (nResult = 0)
    nResult = oObj.compareRegionStarts(oCursor1, oCursor2)
    bStart = (nResult = 0)

    oObj.insertString(oCursor1, cIfcShortName, false)
    oObj.insertControlCharacter(oCursor1, 0, false)
    oCursor2 = oObj.createTextCursor()

    oObj.insertString(oCursor2, cIfcShortName + cIfcShortName, false)
    oObj.insertControlCharacter(oCursor2, 0, false)

    nResult = oObj.compareRegionEnds(oCursor1, oCursor2)
    bEnd = bEnd AND (nResult = -1)
    nResult = oObj.compareRegionEnds(oCursor2, oCursor1)
    bEnd = bEnd AND (nResult = 1)

    nResult = oObj.compareRegionStarts(oCursor1, oCursor2)
    bStart = (nResult = -1)
    nResult = oObj.compareRegionStarts(oCursor2, oCursor1)
    bStart = (nResult = 1)

    Test.MethodTested("compareRegionEnds()", bEnd)
    Test.MethodTested("compareRegionStarts()", bStart)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
</script:module>
