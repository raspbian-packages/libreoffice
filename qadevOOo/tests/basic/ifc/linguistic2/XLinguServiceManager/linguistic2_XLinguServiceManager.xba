<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="linguistic2_XLinguServiceManager" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************




Dim nCB1Val As Long, nCB2Val As Long


Sub RunTest()

'*************************************************************************
' INTERFACE: 
' com.sun.star.linguistic2.XLinguServiceManager
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean

    Dim oListener1 As Object
    Dim oListener2 As Object
    Dim vLocale As new com.sun.star.lang.Locale
    Dim aServices As Variant
    Dim vGetServices As Variant

    vLocale.Language = "en"
    vLocale.Country = "US"
    vLocale.Variant = ""

    oListener1 = createUNOListener("CB1_", "com.sun.star.linguistic2.XLinguServiceEventListener")
    oListener2 = createUNOListener("CB2_", "com.sun.star.linguistic2.XLinguServiceEventListener")
    nCB1Val = 0
    nCB2Val = 0

    Test.StartMethod("getSpellChecker()")
    bOK = true
    bOK = bOK AND hasUnoInterfaces(oObj.getSpellChecker(), "com.sun.star.linguistic2.XSpellChecker")
    Test.MethodTested("getSpellChecker()", bOK)

    Test.StartMethod("getHyphenator()")
    bOK = true
    bOK = bOK AND hasUnoInterfaces(oObj.getHyphenator(), "com.sun.star.linguistic2.XHyphenator")
    Test.MethodTested("getHyphenator()", bOK)

    Test.StartMethod("getThesaurus()")
    bOK = true
    bOK = bOK AND hasUnoInterfaces(oObj.getThesaurus(), "com.sun.star.linguistic2.XThesaurus")
    Test.MethodTested("getThesaurus()", bOK)

    Test.StartMethod("addLinguServiceManagerListener()")
    bOK = true
    bOK = bOK AND oObj.addLinguServiceManagerListener(oListener1)
    bOK = bOK AND oObj.addLinguServiceManagerListener(oListener2)
    Out.Log("oListener1 and oListener2 added =&gt; " + bOK )
    Test.MethodTested("addLinguServiceManagerListener()", bOK)

    Test.StartMethod("removeLinguServiceManagerListener()")
    bOK = true
    bOK = bOK AND oObj.removeLinguServiceManagerListener(oListener2)
    Out.Log("oListener2 removed =&gt; " +bOK)
    Test.MethodTested("removeLinguServiceManagerListener()", bOK)

    Test.StartMethod("getAvailableServices()")
    bOK = true
    aServices = oObj.getAvailableServices("com.sun.star.linguistic2.Thesaurus", vLocale)
    bOK = bOK AND (uBound(aServices()) &gt; -1)
    Test.MethodTested("getAvailableServices()", bOK)

    Test.StartMethod("getConfiguredServices()")
    bOK = true
    vGetServices = oObj.getConfiguredServices("com.sun.star.linguistic2.Thesaurus", vLocale)
    bOK = bOK AND (uBound(vGetServices()) &gt; -1)
    Test.MethodTested("getConfiguredServices()", bOK)

    Test.StartMethod("setConfiguredServices()")
    Dim vSetServices(0) As String
    Dim vSetGetServices As Variant
    bOK = true
    oObj.setConfiguredServices("com.sun.star.linguistic2.Hyphenator", vLocale, vSetServices())
    vSetGetServices = oObj.getConfiguredServices("com.sun.star.linguistic2.Hyphenator", vLocale)
    bOK = bOK AND (uBound(vSetGetServices()) = -1)
    oObj.setConfiguredServices("com.sun.star.linguistic2.Hyphenator", vLocale, vGetServices())
    Test.MethodTested("setConfiguredServices()", bOK)

Exit Sub
ErrHndl:
    Test.Exception()
    bOK = false
    resume next
End Sub
Sub CB1_processLinguServiceEvent
    Out.Log("CallBack for Listener1 processLinguServiceEvent was called.")
    nCB1Val = nCB1Val + 1
End Sub

Sub CB2_processLinguServiceEvent
    Out.Log("CallBack for Listener2 processLinguServiceEvent was called.")
    nCB2Val = nCB2Val + 1
End Sub
Sub CB1_
    Out.Log("CallBack for Listener1 disposing was called.")
    nCB1Val = nCB1Val + 1
End Sub

Sub CB2_disposing
    Out.Log("CallBack for Listener2 disposing was called.")
    nCB2Val = nCB2Val + 1
End Sub
</script:module>
