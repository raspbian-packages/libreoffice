<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sc_ScDataPilotFieldObj" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

' Requiered for  com.sun.star.container.XNamed
 Global cNameToSet As String ' "fixed" if name is fixed


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' sc.ScDataPilotFieldObj
'*************************************************************************
On Error Goto ErrHndl
    Dim oFields As Variant
    Dim oSheet As Object
    Dim i,j As Integer
    Dim oDataPilotTable, oDataPilotDescriptor As Object
    Dim sCellRangeAddress As New com.sun.star.table.CellRangeAddress
    Dim sCellAddress As New com.sun.star.table.CellAddress


    oDoc = utils.createDocument("scalc", cObjectName)
    oSheet = oDoc.Sheets.getByIndex(0)
    Out.Log("Filling a table...")

    for i = 1 to 5
        oSheet.getCellByPosition(0, i).String = "Row" &amp; i
        oSheet.getCellByPosition(i, 0).String = "Col" &amp; i
    next i

    for i = 1 to 5
        for j = 1 to 5
            oSheet.getCellByPosition(i, j).Value = 2.5 * j + i
        next j
    next i

    sCellRangeAddress.Sheet = 0
    sCellRangeAddress.StartColumn = 0
    sCellRangeAddress.StartRow = 0
    sCellRangeAddress.EndColumn = 5
    sCellRangeAddress.EndRow = 5

    sCellAddress.Sheet = 0
    sCellAddress.Column = 7
    sCellAddress.Row = 8

    oDataPilotTable = oSheet.getDataPilotTables
    oDataPilotDescriptor = oDataPilotTable.createDataPilotDescriptor()
    oDataPilotDescriptor.setSourceRange(sCellRangeAddress)
    oDataPilotTable.insertNewByName(cObjectName, sCellAddress, oDataPilotDescriptor)

    oFields = oDataPilotDescriptor.getDataPilotFields()
    oObj = oFields.getByIndex(0)

    cNameToSet = cObjectName

Exit Sub
ErrHndl:
    Test.Exception()
End Sub
</script:module>
