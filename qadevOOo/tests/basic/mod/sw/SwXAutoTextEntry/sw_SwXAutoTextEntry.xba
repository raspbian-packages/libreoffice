<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sw_SwXAutoTextEntry" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

'Required for com.sun.star.text.XText
Global oCollection As Object
Global oInstance As Object
Global aAddons()


Sub beforeInsertTextContent()

'*************************************************************************
' COMPONENT: 
' sw.SwXAutoTextEntry
'*************************************************************************
    oDoc.Text.setString("")
    oObj.applyTo(oDoc.Text.createTextCursor())
End Sub

Sub afterInsertTextContent()
    oDoc.Text.setString("")
    oObj.applyTo(oDoc.Text.createTextCursor())
End Sub

Sub beforeRemoveTextContent()
    oDoc.Text.setString("")
    oObj.applyTo(oDoc.Text.createTextCursor())
End Sub

Sub afterRemoveTextContent()
    oDoc.Text.setString("")
    oObj.applyTo(oDoc.Text.createTextCursor())
End Sub

Global oGroup As Object

Sub CreateObj()
On Error Goto ErrHndl
    Dim oContainer As Object
    Dim i As Integer
    Dim oNames As Variant

    oDoc = utils.createDocument("swriter", cObjectName)
    oContainer = createUNOService( "com.sun.star.text.AutoTextContainer" )
    Out.Log("Looking for not empty elements")
    i = 0
    oGroup = oContainer.getByIndex(i)
    while (oGroup.getCount &lt; 1)
        i = i + 1
        oGroup = oContainer.getByIndex(i)
    wend

    oNames = oGroup.getElementNames()

    for i = 0 to ubound(oNames)
        Out.Log("Element " + i + ": " + oNames(i))
    next i

    oObj = oGroup.getByIndex(0)

    oInstance = oDoc.createInstance("com.sun.star.text.TextTable")
    oCollection = oDoc.getTextTables()

    oObj.ApplyTo(oDoc.Text.createTextCursor)

Exit Sub
ErrHndl:
    Test.Exception()
End Sub
</script:module>
