<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="inv_Invocation" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

' Required for lang.XSingleServiceFactory
Global aArguments As Variant 
' Array of arguments for createInstanceWithArguments()

Global aMustSupportInterface As Variant 
' Array of Strings with names of interfaces which
' must be supported by created instance.


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' inv.Invocation
'*************************************************************************
On Error Goto ErrHndl
    oObj = createUNOService("com.sun.star.comp.stoc.Invocation")
    
    aArguments = Array(createUnoService("com.sun.star.io.Pipe"))
    aMustSupportInterface = Array("com.sun.star.script.XInvocation")
Exit Sub
ErrHndl:
    Test.Exception()
End Sub
</script:module>
