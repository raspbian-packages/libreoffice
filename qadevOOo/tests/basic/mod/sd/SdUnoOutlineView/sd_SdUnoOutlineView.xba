<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sd_SdUnoOutlineView" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

' Required for frame.XController
Global oFrameToAttach As Object
Global oModelToAttach As Object
Global bHasNoViewData As Boolean
Global oObjToSuspend As Object
Global bHasNoModel As Boolean

' Required for lang.XComponent
Global oComponentInstance As Object

' Required for frame.XDispatchProvider
Global dispatchUrl As String

' Required for awt.XWindow
Global oXWindow As Object
Global oCtrlShape as Object


Global oSecDoc As Object
Global oXComponentDoc as Object

Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' sd.SdUnoOutlineView
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    
    bOK = true

    oDoc = utils.createImpressDocument(cObjectName)
    oXComponentDoc = utils.createImpressDocument(cObjectName+ "XComponent")
    
    oObj = oDoc.getCurrentController()
    oComponentInstance = oXComponentDoc.getCurrentController()

    Out.log("Change to Outline view")
    Dim aSlotID As String
    aSlotID = "slot:27010"

    Dim url as new com.sun.star.util.URL
    url.Complete = aSlotID

    Dim UrlTransformer As Object
    UrlTransformer = createUnoService("com.sun.star.util.URLTransformer")
    UrlTransformer.parseStrict(url)

    Dim xDispatcher As Object
    xDispatcher = oObj.queryDispatch( url,"",0)
    if Not IsNULL(xDispatcher) then
        xDispatcher.dispatch( url, DimArray() )
        wait(5000)
    else
        Out.log("queryDispatch FAILED... Object SdUnoOutlineView can't be created")
        oObj =  NULL_OBJECT
    endif
    
    xDispatcher = oComponentInstance.queryDispatch( url,"",0)
    if Not IsNULL(xDispatcher) then
        xDispatcher.dispatch( url, DimArray() )
        wait(5000)
    else
        Out.log("queryDispatch FAILED... Object SdUnoOutlineView can't be created")
    endif

    oSecDoc = utils.createImpressDocument("For frame.XController")
    bHasNoViewData = false
    bHasNoModel = false
    oObjToSuspend = oObj
    oFrameToAttach = StarDesktop.getCurrentFrame()
    oModelToAttach = oSecDoc


    dispatchUrl = "slot:27069"
    
    ' For awt.XWindow
    oXWindow = utils.at_getCurrentWindow(oSecDoc)
    
Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Sub DisposeObj()
    utils.closeObject(oSecDoc)
End Sub
</script:module>
