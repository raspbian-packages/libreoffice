<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="xmloff_Draw_XMLStylesExporter" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

'Required for com.sun.star.document.XFilter
Global oFilterDescriptor As Variant

'Required for com.sun.star.lang.XInitialization
Global aInitArgs() As Variant

'Required for com.sun.star.document.XExporter
Global oSrcDocument As Object

Dim counter As Integer


Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' xmloff.Draw.XMLStylesExporter
'*************************************************************************
On error goto ErrHndl
    Dim initArgs(0), oMSF, oStyleFamilies, oFamily, oStyle As Object
    Dim oSFNames As Variant
    Dim oFamilyName As String
    Dim printXML As Boolean
    Dim Tag1, Tag2, Tag3 As Variant
    Dim expString As String
    Dim filter As Variant

    printXML = true
    expString = "NewStyle"
    counter = counter +1
    oMSF = getProcessServiceManager()
    oDoc = utils.createDocument("sdraw", cObjectName)
    oDocHandler = oMSF.createInstanceWithArguments("basichelper.DocumentHandler", Array(printXML))

    Tag1 = Array("office:document-styles")
    Tag2 = Array("office:styles")
    Tag3 = Array("style:style", "style:name", expString)
    filter = Array( _
                Array("TagExists", Tag1, Tag2, Tag3), _
                Array("TagEnclosed", Tag3, Tag2) _
             )

    oDocHandler.initialize(filter)

    initArgs(0) = oDocHandler
    aInitArgs = initArgs()
    oObj = oMSF.createInstanceWithArguments("com.sun.star.comp.Draw.XMLStylesExporter", initArgs())

    oStyleFamilies = oDoc.getStyleFamilies()
    oSFNames = oStyleFamilies.getElementNames()
    oFamilyName = oSFNames(0)
    oFamily = oStyleFamilies.getByName(oFamilyName)
    oStyle = oDoc.createInstance("com.sun.star.style.Style")
    oFamily.insertByName(expString, oStyle)

    oObj.setSourceDocument(oDoc)

    Dim aFilterDescr(0) As New com.sun.star.beans.PropertyValue
    aFilterDescr(0).Name = "FilterName"
    aFilterDescr(0).Value = "sdraw: StarOffice XML (Draw)"
    oFilterDescriptor = aFilterDescr()

    oSrcDocument = oDoc
Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Global oDocHandler As Object

Function checkFilter() As Boolean
    checkFilter = oDocHandler.getByName("XMLIsCorrect")
    Out.Log(oDocHandler.getByName("XMLCode"))
End Function
</script:module>
