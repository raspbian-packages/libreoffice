<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="svtools_AccessibleBrowseBox" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:
Global controller As Object

Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' svtools.AccessibleBrowseBox
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oWin As Object, xRoot As Object
    Dim xController As Object

    oDoc = utils.createDocument("swriter", cObjectName)

    'opening DatasourceBrowser
    Dim urlTransformer As Object
    urlTransformer = createUNOService("com.sun.star.util.URLTransformer")
    Dim aUrl As new com.sun.star.util.URL
    aUrl.Complete = ".component:DB/DataSourceBrowser"
    urlTransformer.parseStrict(aUrl)
    Dim xDispatcher As Object
    xController = oDoc.getCurrentController()
    xDispatcher = xController.queryDispatch(aUrl, "_beamer", 12)
    Dim no_args()
    xDispatcher.dispatch(aUrl, no_args)
    wait(1000)

    oWin = createUnoService("com.sun.star.awt.Toolkit").getActiveTopWindow()

    xRoot = utils.at_getAccessibleObject(oWin)
    oObj = utils.at_getAccessibleObjectForRole(xRoot, com.sun.star.accessibility.AccessibleRole.PANEL)
    Out.log(oObj.getImplementationName)

    Dim frame1 As Object, frame2 As Object
    frame1 = StarDesktop.getCurrentFrame()
    frame2 = frame1.findFrame("_beamer", 4)
    frame2.setName("DatasourceBrowser")
    controller = frame2.getController()
	
Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Sub DisposeObj()
    utils.closeObject(oDoc)
End Sub

Sub fireEvent()
    Out.log("fireEvent() called")

    Dim dbContext As Object
    dbContext = createUnoService("com.sun.star.sdb.DatabaseContext")
    if (dbContext.hasByName("Bibliography")) then
        dbContext.revokeObject("Bibliography")
    endif

    Dim dbSource As Object
    dbSource = createUnoService("com.sun.star.sdb.DataSource")
    dbSource.URL = "sdbc:dbase:" + utils.Path2URL("file:///" + utils.getUserPath + "/database/biblio")
	dbContext.registerObject("Bibliography", dbSource)

    Dim params(2) As new com.sun.star.beans.PropertyValue
    params(0).Name = "DataSourceName"
    params(0).Value = "Bibliography"
    params(1).Name = "CommandType"
    params(1).Value = com.sun.star.sdb.CommandType.TABLE
    params(2).Name = "Command"
    params(2).Value = "biblio"

    controller.initialize(params())
    wait(2000)
End Sub
</script:module>
