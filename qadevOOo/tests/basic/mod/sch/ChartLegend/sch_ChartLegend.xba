<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="sch_ChartLegend" script:language="StarBasic">


'*************************************************************************
'
' DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
' 
' Copyright 2000, 2010 Oracle and/or its affiliates.
'
' OpenOffice.org - a multi-platform office productivity suite
'
' This file is part of OpenOffice.org.
'
' OpenOffice.org is free software: you can redistribute it and/or modify
' it under the terms of the GNU Lesser General Public License version 3
' only, as published by the Free Software Foundation.
'
' OpenOffice.org is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU Lesser General Public License version 3 for more details
' (a copy is included in the LICENSE file that accompanied this code).
'
' You should have received a copy of the GNU Lesser General Public License
' version 3 along with OpenOffice.org.  If not, see
' <http://www.openoffice.org/license.html>
' for a copy of the LGPLv3 License.
'
'*************************************************************************
'*************************************************************************



' Be sure that all variables are dimensioned:
option explicit


' REQUIRED VARIABLES for interface/service tests:

Global oComponentInstance As Object ' it will be disposed

Global oComponentDoc As Object

Sub CreateObj()

'*************************************************************************
' COMPONENT: 
' sch.ChartLegend
'*************************************************************************
On Error Goto ErrHndl
    Dim bOK As Boolean
    Dim oCharts As Object, oChart As Object
	Dim oCompChart as Object
	
    bOK = true
    oDoc = utils.loadTestDocument("TransparencyCalcChart.sxc", cObjectName)
    oComponentDoc = utils.createDocument("scalc", cObjectName &amp; "1")

    oCharts = oDoc.Sheets(0).Charts

    Dim aNames(), i as integer
    aNames = oCharts.getElementNames()
    Out.Log("Chart names :")
    for  i = 0 to ubound(aNames()) 
        Out.Log("'" + aNames(i) + "'")
    next i
        
    oChart = oCharts.getByName("TestTransparentChart").embeddedObject

    oObj = oChart.Legend
	oCompChart = utils.createChartObject(oComponentDoc, cObjectName &amp; "1")
    oComponentInstance = oCompChart.Legend
Exit Sub
ErrHndl:
    Test.Exception()
End Sub

Sub DisposeObj()
    if NOT isNULL(oComponentDoc) then oComponentDoc.dispose()
End Sub
</script:module>
