%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Creator: (Oracle Open Office 3.2)
%%For: (ll93751)
%%CreationDate: (Fri May 12 00:00:14 2000)
%%Title: (CurrentTime)
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%Orientation: (atend)
%%PageOrder: Ascend
%%EndComments
%%BeginProlog
%%BeginResource: procset PSPrint-Prolog 1.0 0
/ISO1252Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /unused
/Euro /unused /quotesinglbase /florin /quotedblbase /ellipsis /dagger /daggerdbl
/circumflex /perthousand /Scaron /guilsinglleft /OE /unused /Zcaron /unused
/unused /quoteleft /quoteright /quotedblleft /quotedblright /bullet /endash /emdash
/tilde /trademark /scaron /guilsinglright /oe /unused /zcaron /Ydieresis
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] def

/psp_definefont { exch dup findfont dup length dict begin { 1 index /FID ne
{ def } { pop pop } ifelse } forall /Encoding 3 -1 roll def
currentdict end exch pop definefont pop } def

/pathdict dup 8 dict def load begin
/rcmd { { currentfile 1 string readstring pop 0 get dup 32 gt { exit }
{ pop } ifelse } loop dup 126 eq { pop exit } if 65 sub dup 16#3 and 1
add exch dup 16#C and -2 bitshift 16#3 and 1 add exch 16#10 and 16#10
eq 3 1 roll exch } def
/rhex { dup 1 sub exch currentfile exch string readhexstring pop dup 0
get dup 16#80 and 16#80 eq dup 3 1 roll { 16#7f and } if 2 index 0 3
-1 roll put 3 1 roll 0 0 1 5 -1 roll { 2 index exch get add 256 mul }
for 256 div exch pop exch { neg } if } def
/xcmd { rcmd exch rhex exch rhex exch 5 -1 roll add exch 4 -1 roll add
1 index 1 index 5 -1 roll { moveto } { lineto } ifelse } def end
/readpath { 0 0 pathdict begin { xcmd } loop end pop pop } def

systemdict /languagelevel known not {
/xshow { exch dup length 0 1 3 -1 roll 1 sub { dup 3 index exch get
exch 2 index exch get 1 string dup 0 4 -1 roll put currentpoint 3 -1
roll show moveto 0 rmoveto } for pop pop } def
/rectangle { 4 -2 roll moveto 1 index 0 rlineto 0 exch rlineto neg 0
rlineto closepath } def
/rectfill { rectangle fill } def
/rectstroke { rectangle stroke } def } if
/bshow { currentlinewidth 3 1 roll currentpoint 3 index show moveto
setlinewidth false charpath stroke setlinewidth } def
/bxshow { currentlinewidth 4 1 roll setlinewidth exch dup length 1 sub
0 1 3 -1 roll { 1 string 2 index 2 index get 1 index exch 0 exch put dup
currentpoint 3 -1 roll show moveto currentpoint 3 -1 roll false charpath
stroke moveto 2 index exch get 0 rmoveto } for pop pop setlinewidth } def

/psp_lzwfilter { currentfile /ASCII85Decode filter /LZWDecode filter } def
/psp_ascii85filter { currentfile /ASCII85Decode filter } def
/psp_lzwstring { psp_lzwfilter 1024 string readstring } def
/psp_ascii85string { psp_ascii85filter 1024 string readstring } def
/psp_imagedict {
/psp_bitspercomponent { 3 eq { 1 }{ 8 } ifelse } def
/psp_decodearray { [ [0 1 0 1 0 1] [0 255] [0 1] [0 255] ] exch get }
def 7 dict dup
/ImageType 1 put dup
/Width 7 -1 roll put dup
/Height 5 index put dup
/BitsPerComponent 4 index psp_bitspercomponent put dup
/Decode 5 -1 roll psp_decodearray put dup
/ImageMatrix [1 0 0 1 0 0] dup 5 8 -1 roll put put dup
/DataSource 4 -1 roll 1 eq { psp_lzwfilter } { psp_ascii85filter } ifelse put
} def
%%EndResource
%%EndProlog
%%BeginSetup
%
%%BeginResource: font ArialMTFID10HGSet1
%!PS-AdobeFont-1.0-2.53740
% Creator: SunTypeTools-TT 1.0 gelf
% Original font name: ArialMT
30 dict begin
/PaintType 0 def
/FontType 3 def
/StrokeWidth 0 def
/FontName (ArialMTFID10HGSet1) cvn def
/XUID [103 0 0 16#44E1DF76 13 16#50429D91 16#0D1ECFCF] def
/FontMatrix [.001 0 0 .001 0 0] def
/FontBBox [-664 -324 2028 1037] def
/Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding 0 /glyph0 put
    Encoding 32 /glyph1 put
    Encoding 48 /glyph2 put
    Encoding 49 /glyph3 put
    Encoding 51 /glyph4 put
    Encoding 58 /glyph5 put
    Encoding 80 /glyph6 put
    Encoding 83 /glyph7 put
    Encoding 97 /glyph8 put
    Encoding 101 /glyph9 put
    Encoding 103 /glyph10 put
    Encoding 104 /glyph11 put
    Encoding 116 /glyph12 put
/CharProcs 14 dict def
  CharProcs begin
    /.notdef {} def
    /glyph0 {
	750 0 125 0 625 625 setcachedevice
	125 0 moveto
	125 625 lineto
	625 625 lineto
	625 0 lineto
	125 0 lineto
	closepath
	140 15 moveto
	609 15 lineto
	609 609 lineto
	140 609 lineto
	140 15 lineto
	closepath
	fill
    } bind def
    /glyph1 {
	277 0 0 0 0 0 setcachedevice
    } bind def
    /glyph2 {
	556 0 41 -12 508 718 setcachedevice
	41 353 moveto
	41 437 50 505 67 557 curveto
	84 608 110 648 145 676 curveto
	179 704 222 718 274 718 curveto
	313 718 347 711 375 695 curveto
	404 680 428 658 447 628 curveto
	466 600 481 564 492 522 curveto
	502 480 508 424 508 353 curveto
	508 269 500 201 482 149 curveto
	465 98 439 58 405 30 curveto
	371 2 327 -12 274 -12 curveto
	206 -12 151 12 112 62 curveto
	65 121 41 218 41 353 curveto
	closepath
	131 353 moveto
	131 235 145 157 173 118 curveto
	200 80 234 60 274 60 curveto
	315 60 349 79 376 118 curveto
	404 157 417 235 417 353 curveto
	417 470 404 549 376 587 curveto
	349 626 315 645 273 645 curveto
	233 645 201 629 177 594 curveto
	147 551 131 470 131 353 curveto
	closepath
	fill
    } bind def
    /glyph3 {
	556 0 108 0 372 718 setcachedevice
	372 0 moveto
	284 0 lineto
	284 560 lineto
	263 540 236 520 201 499 curveto
	167 479 136 464 108 454 curveto
	108 539 lineto
	158 562 201 590 237 623 curveto
	274 655 300 687 315 718 curveto
	372 718 lineto
	372 0 lineto
	closepath
	fill
    } bind def
    /glyph4 {
	556 0 41 -12 510 718 setcachedevice
	41 188 moveto
	129 200 lineto
	140 151 157 115 181 93 curveto
	205 71 235 60 270 60 curveto
	311 60 346 74 375 103 curveto
	403 131 417 166 417 209 curveto
	417 250 404 283 377 309 curveto
	352 335 318 348 277 348 curveto
	261 348 240 345 215 338 curveto
	225 416 lineto
	230 415 235 415 239 415 curveto
	276 415 310 424 340 444 curveto
	370 463 385 494 385 534 curveto
	385 566 374 593 352 614 curveto
	331 635 302 646 268 646 curveto
	234 646 205 636 182 614 curveto
	160 593 145 561 138 517 curveto
	50 533 lineto
	61 592 85 637 124 670 curveto
	162 702 209 718 266 718 curveto
	305 718 341 710 374 693 curveto
	406 677 432 654 449 625 curveto
	466 596 475 565 475 532 curveto
	475 501 467 474 450 448 curveto
	434 423 409 402 376 387 curveto
	419 378 452 357 475 327 curveto
	499 296 510 257 510 211 curveto
	510 149 488 96 442 52 curveto
	396 9 339 -12 269 -12 curveto
	207 -12 154 5 113 43 curveto
	71 81 48 129 41 188 curveto
	closepath
	fill
    } bind def
    /glyph5 {
	277 0 90 0 190 518 setcachedevice
	90 418 moveto
	90 518 lineto
	190 518 lineto
	190 418 lineto
	90 418 lineto
	closepath
	90 0 moveto
	90 100 lineto
	190 100 lineto
	190 0 lineto
	90 0 lineto
	closepath
	fill
    } bind def
    /glyph6 {
	666 0 77 0 623 715 setcachedevice
	77 0 moveto
	77 715 lineto
	347 715 lineto
	394 715 431 713 456 708 curveto
	491 703 520 692 544 675 curveto
	568 659 587 636 602 606 curveto
	616 577 623 544 623 508 curveto
	623 448 604 396 565 354 curveto
	526 312 457 291 355 291 curveto
	171 291 lineto
	171 0 lineto
	77 0 lineto
	closepath
	171 375 moveto
	356 375 lineto
	417 375 461 386 487 409 curveto
	513 432 525 464 525 505 curveto
	525 535 518 561 503 583 curveto
	488 604 468 618 443 625 curveto
	427 629 398 631 354 631 curveto
	171 631 lineto
	171 375 lineto
	closepath
	fill
    } bind def
    /glyph7 {
	666 0 44 -12 614 728 setcachedevice
	44 229 moveto
	134 237 lineto
	138 202 148 172 164 149 curveto
	179 126 203 108 235 94 curveto
	268 80 305 72 345 72 curveto
	381 72 413 78 441 88 curveto
	469 99 489 114 503 133 curveto
	516 151 523 172 523 194 curveto
	523 216 517 236 503 253 curveto
	491 270 469 284 439 295 curveto
	420 302 377 314 312 330 curveto
	246 346 200 360 173 375 curveto
	140 393 114 415 97 441 curveto
	81 468 72 498 72 530 curveto
	72 566 82 600 103 632 curveto
	123 663 153 687 192 703 curveto
	232 719 275 728 324 728 curveto
	377 728 424 719 464 702 curveto
	505 685 536 660 558 626 curveto
	580 594 591 556 593 514 curveto
	502 507 lineto
	498 552 481 586 453 609 curveto
	425 632 383 644 328 644 curveto
	270 644 229 634 203 613 curveto
	177 592 163 566 163 537 curveto
	163 511 172 490 191 473 curveto
	209 457 257 440 334 422 curveto
	411 405 463 390 492 376 curveto
	534 357 564 333 584 304 curveto
	604 274 614 240 614 202 curveto
	614 164 604 128 582 94 curveto
	560 61 529 35 488 16 curveto
	447 -2 401 -12 350 -12 curveto
	285 -12 231 -2 187 16 curveto
	144 35 109 63 84 101 curveto
	59 139 46 182 44 229 curveto
	closepath
	fill
    } bind def
    /glyph8 {
	556 0 36 -11 513 530 setcachedevice
	404 63 moveto
	372 36 340 17 310 5 curveto
	280 -5 248 -11 213 -11 curveto
	156 -11 112 2 82 30 curveto
	51 58 36 93 36 136 curveto
	36 162 41 185 53 206 curveto
	64 227 80 244 99 256 curveto
	117 269 138 279 162 285 curveto
	179 290 205 294 240 298 curveto
	311 307 363 317 396 329 curveto
	397 341 397 348 397 352 curveto
	397 387 389 413 372 427 curveto
	350 447 316 457 272 457 curveto
	231 457 201 450 181 436 curveto
	161 421 146 395 137 358 curveto
	51 370 lineto
	59 407 71 437 89 459 curveto
	107 482 133 500 167 512 curveto
	201 524 240 530 285 530 curveto
	329 530 365 525 393 514 curveto
	420 504 440 491 454 475 curveto
	467 459 476 439 481 415 curveto
	484 400 485 374 485 334 curveto
	485 217 lineto
	485 135 487 84 491 62 curveto
	495 41 502 20 513 0 curveto
	421 0 lineto
	413 18 407 39 404 63 curveto
	closepath
	396 260 moveto
	365 247 317 236 253 227 curveto
	217 222 191 216 176 209 curveto
	162 203 150 193 142 181 curveto
	134 168 129 154 129 139 curveto
	129 116 138 96 156 80 curveto
	174 65 200 57 234 57 curveto
	268 57 298 64 324 79 curveto
	351 94 370 114 382 140 curveto
	392 160 396 189 396 228 curveto
	396 260 lineto
	closepath
	fill
    } bind def
    /glyph9 {
	556 0 36 -11 514 530 setcachedevice
	420 166 moveto
	511 155 lineto
	497 103 471 62 432 32 curveto
	393 3 344 -11 283 -11 curveto
	208 -11 147 11 103 58 curveto
	59 104 36 170 36 254 curveto
	36 342 59 409 104 458 curveto
	148 506 207 530 278 530 curveto
	348 530 404 506 448 459 curveto
	492 412 514 346 514 260 curveto
	514 255 514 247 514 236 curveto
	127 236 lineto
	130 180 146 136 175 105 curveto
	204 76 240 60 284 60 curveto
	316 60 343 68 366 85 curveto
	389 103 407 129 420 166 curveto
	closepath
	132 309 moveto
	421 309 lineto
	418 352 407 385 388 407 curveto
	360 440 324 458 279 458 curveto
	239 458 206 444 178 417 curveto
	150 390 135 354 132 309 curveto
	closepath
	fill
    } bind def
    /glyph10 {
	556 0 32 -210 489 530 setcachedevice
	49 -42 moveto
	135 -55 lineto
	138 -81 148 -101 165 -113 curveto
	187 -129 216 -137 254 -137 curveto
	294 -137 326 -129 348 -112 curveto
	370 -96 385 -74 393 -44 curveto
	397 -26 400 10 399 67 curveto
	361 22 313 0 256 0 curveto
	185 0 130 25 90 77 curveto
	52 128 32 190 32 262 curveto
	32 311 41 357 59 399 curveto
	77 440 103 473 137 496 curveto
	170 519 210 530 256 530 curveto
	317 530 368 505 408 456 curveto
	408 518 lineto
	489 518 lineto
	489 70 lineto
	489 -10 481 -67 464 -101 curveto
	448 -134 422 -161 386 -180 curveto
	351 -200 307 -210 254 -210 curveto
	193 -210 143 -196 104 -168 curveto
	67 -140 48 -99 49 -42 curveto
	closepath
	122 268 moveto
	122 200 136 151 163 119 curveto
	189 88 224 72 264 72 curveto
	305 72 338 88 366 119 curveto
	393 150 407 199 407 265 curveto
	407 329 393 376 365 409 curveto
	337 441 303 457 263 457 curveto
	224 457 191 441 163 410 curveto
	136 378 122 331 122 268 curveto
	closepath
	fill
    } bind def
    /glyph11 {
	556 0 65 0 488 715 setcachedevice
	65 0 moveto
	65 715 lineto
	153 715 lineto
	153 458 lineto
	194 506 246 530 309 530 curveto
	347 530 380 522 409 507 curveto
	437 492 458 471 470 444 curveto
	482 418 488 379 488 328 curveto
	488 0 lineto
	400 0 lineto
	400 328 lineto
	400 372 391 404 372 424 curveto
	353 444 326 454 291 454 curveto
	265 454 240 448 217 434 curveto
	194 421 178 402 168 379 curveto
	159 356 153 324 153 283 curveto
	153 0 lineto
	65 0 lineto
	closepath
	fill
    } bind def
    /glyph12 {
	277 0 17 -6 270 699 setcachedevice
	257 78 moveto
	270 0 lineto
	246 -3 224 -6 204 -6 curveto
	172 -6 147 -1 129 8 curveto
	112 18 100 31 92 48 curveto
	85 64 82 99 82 151 curveto
	82 450 lineto
	17 450 lineto
	17 518 lineto
	82 518 lineto
	82 646 lineto
	169 699 lineto
	169 518 lineto
	257 518 lineto
	257 450 lineto
	169 450 lineto
	169 146 lineto
	169 122 170 105 174 98 curveto
	177 91 182 85 189 81 curveto
	196 77 206 75 219 75 curveto
	229 75 241 76 257 78 curveto
	closepath
	fill
    } bind def
  end
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not
    {pop /.notdef} if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
currentdict end
(ArialMTFID10HGSet1) cvn exch definefont pop
%%EndResource
%%DocumentSuppliedResources: font ArialMTFID10HGSet1
[{
%%BeginFeature: *PageSize A4
<</PageSize [595 842] /ImagingBBox null>> setpagedevice
%%EndFeature
} stopped cleartomark
%%EndSetup
%%Page: 1 1
%%PageOrientation: Portrait
%%PageBoundingBox: 18 18 577 824
%%BeginPageSetup
%
%%EndPageSetup
gsave
[0.24 0 0 -0.24 18 824] concat
gsave
grestore
gsave
readpath
V00EC00ECA003CE07D900A00BC~
closepath clip newpath
grestore
gsave
readpath
V00EC00ECA003CE07D900A00BC~
closepath clip newpath
1174 280 moveto
0 0 0 setrgbcolor
(ArialMTFID10HGSet1) cvn findfont 42 -42 matrix scale makefont setfont
<536865657431>
[28 23 23 23 12 0]
xshow
grestore
gsave
readpath
V00EC00ECA003CE07D900A00BC~
closepath clip newpath
grestore
gsave
readpath
V00EC0C8CA003CE07D900A00BC~
closepath clip newpath
grestore
gsave
readpath
V00EC0C8CA003CE07D900A00BC~
closepath clip newpath
1174 3256 moveto
0 0 0 setrgbcolor
(ArialMTFID10HGSet1) cvn findfont 42 -42 matrix scale makefont setfont
<5061676520>
[28 23 23 23 0]
xshow
1283 3256 moveto
<31>
show
grestore
gsave
readpath
V00EC0C8CA003CE07D900A00BC~
closepath clip newpath
grestore
gsave
568 782 moveto
0 0 0 setrgbcolor
(ArialMTFID10HGSet1) cvn findfont 367 -367 matrix scale makefont setfont
<30>
show
781 782 moveto
<3A>
show
1050 782 moveto
<3030>
[204 0]
xshow
1466 782 moveto
<3A>
show
1735 782 moveto
<3133>
[204 0]
xshow
grestore grestore
showpage
%%PageTrailer

%%Trailer
%%BoundingBox: 0 0 595 842
%%Orientation: Portrait
%%Pages: 1
%%EOF
